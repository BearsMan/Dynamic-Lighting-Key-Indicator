<Window
    x:Class="Dynamic_Lighting_Key_Indicator.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Dynamic_Lighting_Key_Indicator"
    xmlns:converters="using:Dynamic_Lighting_Key_Indicator.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ignore="http://www.galasoft.ch/ignore"
    mc:Ignorable="ignore"
    Title="Dynamic Lighting Key Indicator"
    >

    <Grid Padding="40" Background="{ThemeResource WindowBackgroundColor}">
        <Grid.Resources>
            <!-- Style for color selection buttons -->
            <Style x:Key="ColorButtonStyle" TargetType="Button">
                <Setter Property="Width" Value="45"/>
                <Setter Property="Height" Value="45"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="CornerRadius" Value="4"/>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />     <!-- Row 0 -->
            <RowDefinition Height="Auto" />     <!-- Row 1 -->
            <RowDefinition Height="Auto" />     <!-- Row 2 -->
            <RowDefinition Height="Auto" />     <!-- Row 3 -->
            <RowDefinition Height="Auto" />     <!-- Row 4 -->
            <RowDefinition Height="Auto" />     <!-- Row 5 -->
            <RowDefinition Height="Auto" />     <!-- Row 6 -->
            <RowDefinition Height="Auto" />     <!-- Row 7 -->
            <RowDefinition Height="Auto" />     <!-- Row 8 -->
            <RowDefinition Height="Auto" />     <!-- Row 9 -->
            <RowDefinition Height="Auto" />     <!-- Row 10 -->
            <RowDefinition Height="Auto" />     <!-- Row 11 -->
        </Grid.RowDefinitions>

        <TextBlock x:Name="watcherStatusText" 
                   Grid.Row="0"
                   Text="{x:Bind ViewModel.DeviceWatcherStatusMessage, Mode=OneWay}"
                   HorizontalAlignment="Center"/>
        
        <!-- Row With Start/Stop monitoring buttons -->
        <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,20,0,0" HorizontalAlignment="Center">

            <Button x:Name="buttonStartWatch" Click="ButtonStartWatch_Click" Margin="0,0,0,0" IsEnabled="{x:Bind ViewModel.IsWatcherStopped, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE768;" Margin="0,0,8,0"/>
                    <TextBlock Text="Start Monitoring"/>
                </StackPanel>
            </Button>
            
            <Button x:Name="buttonStopWatch" Click="ButtonStopWatch_Click" Margin="10,0,0,0" IsEnabled="{x:Bind ViewModel.IsWatcherRunning, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE71A;" Margin="0,0,8,0"/>
                    <TextBlock Text="Stop Monitoring"/>
                </StackPanel>
            </Button>

            
            
        </StackPanel>

        <!-- Row with Dropdown with selectable devices and Apply Button -->
        <StackPanel Orientation="Horizontal" Grid.Row="2" Margin="0,20,0,0" HorizontalAlignment="Center">
            
            <ComboBox x:Name="dropdownDevices" 
                  Margin="0,0,0,0"
                  Width="300"
                  HorizontalAlignment="Center"
                  PlaceholderText="Select a device"
                  SelectedIndex="{x:Bind ViewModel.SelectedDeviceIndex, Mode=TwoWay}"
                  IsEnabled="{x:Bind ViewModel.IsWatcherRunning, Mode=OneWay}"
                  ignore:Visibility="{x:Bind ViewModel.WatcherRunningVisibilityBool, Mode=OneWay}"
            />

            <Button x:Name="buttonApply" Click="ButtonApply_Click" Margin="10,0,0,0"
                    HorizontalAlignment="Center"
                    ignore:Visibility="{x:Bind ViewModel.WatcherRunningVisibilityBool, Mode=OneWay}"
                    IsEnabled="{x:Bind ViewModel.EnableApplyButton, Mode=OneWay}">  
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8FB;" Margin="0,0,8,0"/>
                    <TextBlock Text="Apply To Device"/>
                </StackPanel>
            </Button>
            
        </StackPanel>

        <!-- Mixed Use status message: When attached, says number of attached devices, otherwise watcher status such as 'Waiting' with instructional message to start -->
        <TextBlock x:Name="statusText" 
                   Grid.Row="3" 
                   Margin="0,20,0,0"
                   Text="{x:Bind ViewModel.DeviceStatusMessage, Mode=OneWay}"
                   HorizontalAlignment="Center"
                   />

        <TextBlock x:Name="attachedDevices"
                   Grid.Row="4"
                   Margin="0,5,0,0"
                   Text="{x:Bind ViewModel.AttachedDevicesMessage, Mode=OneWay}"
                   HorizontalAlignment="Center"
                   ignore:Visibility="{x:Bind ViewModel.WatcherRunningVisibilityBool, Mode=OneWay}"
                   />

        <!-- Color Settings Grid -->
        <Grid Grid.Row="5" Margin="0,20,0,0" HorizontalAlignment="Center">
            <Grid.Resources>
                <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="50"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Headers -->
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Key" FontWeight="Bold" Margin="0,0,10,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="0" Grid.Column="1" Text="On" FontWeight="Bold" Margin="5,0,5,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <TextBlock Grid.Row="0" Grid.Column="3" Text="Off" FontWeight="Bold" Margin="5,0,5,5" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <!-- Scroll Lock -->
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Scroll Lock:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonScrollLockOn" 
                    Grid.Row="1" 
                    Grid.Column="1" 
                    Style="{StaticResource ColorButtonStyle}"
                    Background="{Binding ScrollLockOnColor, Converter={StaticResource ColorToBrushConverter}}" 
                    Click="ColorButton_Click" 
                    Tag="ScrollLockOnColor">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding ScrollLockOnGlyph, Mode=OneWay}" />
            </Button>
            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding ScrollLockOnColorHex}" Margin="5,2"/>
            <Button x:Name="buttonScrollLockOff" 
                    Grid.Row="1" 
                    Grid.Column="3" 
                    Style="{StaticResource ColorButtonStyle}"
                    Background="{Binding ScrollLockOffColor, Converter={StaticResource ColorToBrushConverter}}" 
                    Click="ColorButton_Click" 
                    Tag="ScrollLockOffColor">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding ScrollLockOffGlyph, Mode=OneWay}" />
            </Button>
            <TextBlock Grid.Row="1" Grid.Column="4" Text="{Binding ScrollLockOffColorHex}" Margin="5,2"/>

            <!-- Caps Lock -->
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Caps Lock:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonCapsLockOn" 
                    Grid.Row="2" 
                    Grid.Column="1" 
                    Style="{StaticResource ColorButtonStyle}"
                    Background="{Binding CapsLockOnColor, Converter={StaticResource ColorToBrushConverter}}" 
                    Click="ColorButton_Click" 
                    Tag="CapsLockOnColor">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding CapsLockOnGlyph, Mode=OneWay}" />
            </Button>
            <TextBlock Grid.Row="2" Grid.Column="2" Text="{Binding CapsLockOnColorHex}" Margin="5,2"/>
            <Button x:Name="buttonCapsLockOff" 
                    Grid.Row="2" 
                    Grid.Column="3" 
                    Style="{StaticResource ColorButtonStyle}"
                    Background="{Binding CapsLockOffColor, Converter={StaticResource ColorToBrushConverter}}" 
                    Click="ColorButton_Click" 
                    Tag="CapsLockOffColor">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding CapsLockOffGlyph, Mode=OneWay}" />
            </Button>
            <TextBlock Grid.Row="2" Grid.Column="4" Text="{Binding CapsLockOffColorHex}" Margin="5,2"/>

            <!-- Num Lock -->
            <TextBlock Grid.Row="3" Grid.Column="0" Text="Num Lock:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonNumLockOn" 
                    Grid.Row="3" 
                    Grid.Column="1" 
                    Style="{StaticResource ColorButtonStyle}"
                    Background="{Binding NumLockOnColor, Converter={StaticResource ColorToBrushConverter}}" 
                    Click="ColorButton_Click" 
                    Tag="NumLockOnColor">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding NumLockOnGlyph, Mode=OneWay}" />
            </Button>
            <TextBlock Grid.Row="3" Grid.Column="2" Text="{Binding NumLockOnColorHex}" Margin="5,2"/>
            <Button x:Name="buttonNumLockOff" 
                    Grid.Row="3" 
                    Grid.Column="3" 
                    Style="{StaticResource ColorButtonStyle}"
                    Background="{Binding NumLockOffColor, Converter={StaticResource ColorToBrushConverter}}" 
                    Click="ColorButton_Click" 
                    Tag="NumLockOffColor">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{Binding NumLockOffGlyph, Mode=OneWay}" />
            </Button>
            <TextBlock Grid.Row="3" Grid.Column="4" Text="{Binding NumLockOffColorHex}" Margin="5,2"/>

            <!-- Default -->
            <TextBlock Grid.Row="4" Grid.Column="0" Text="Default:" VerticalAlignment="Center" Margin="0,5,10,5"/>
            <Button x:Name="buttonDefaultColor" 
                    Grid.Row="4" 
                    Grid.Column="1" 
                    Style="{StaticResource ColorButtonStyle}"
                    Background="{Binding DefaultColor, Converter={StaticResource ColorToBrushConverter}}" 
                    Click="ColorButton_Click" 
                    Tag="DefaultColor"/>
            <TextBlock Grid.Row="4" Grid.Column="2" Text="{Binding DefaultColorHex}" Margin="5,2"/>
        </Grid>

        <!-- Config Buttons -->
        <StackPanel Orientation="Horizontal" Grid.Row="6" HorizontalAlignment="Center" Margin="0,20,0,0">
            
            <!-- Save Button -->
            <Button x:Name="buttonSaveSettings" Click="ButtonSaveSettings_Click" Margin="0,0,0,0" IsEnabled="{x:Bind ViewModel.IsSaveButtonEnabled, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE74E;" Margin="0,0,8,0"/>
                    <TextBlock Text="Save Settings"/>
                </StackPanel>
            </Button>

            <!-- Open Config Folder Button -->
            <Button x:Name="buttonOpenConfigFolder" Click="OpenConfigFolder_Click" Margin="10,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8B7;" Margin="0,0,8,0"/>
                    <TextBlock Text="Open Config Folder"/>
                </StackPanel>
            </Button>

            <!-- Restore Defaults Button -->
            <Button x:Name="buttonRestoreDefaults" Click="RestoreDefaults_Click" Margin="10,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE7A7;" Margin="0,0,8,0"/>
                    <TextBlock Text="Restore Default Colors"/>
                </StackPanel>
            </Button>
            
        </StackPanel>

        <!-- Startup Setting Toggle and Message -->
        <Grid Grid.Row="7" Margin="0,20,0,0" HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Start with Windows Label and Toggle -->
            <TextBlock Grid.Row="0" Grid.Column="0" 
               Text="Start with Windows:" 
               HorizontalAlignment="Center"
               Margin="0,0,10,0"/>
            <ToggleSwitch x:Name="toggleStartupWithWindows"
                  Grid.Row="1" Grid.Column="0"
                  IsOn="{x:Bind ViewModel.IsStartupEnabled, Mode=TwoWay}"
                  IsEnabled="{x:Bind ViewModel.StartupSettingCanBeChanged, Mode=OneWay}"
                  HorizontalAlignment="Center"
                  MinWidth="0" 
                  Margin="0,0,10,0"/>

            <!-- Start Minimized to Tray Label and Toggle -->
            <TextBlock Grid.Row="0" Grid.Column="1" 
               Text="Start Minimized to Tray:" 
               HorizontalAlignment="Center"
               Margin="10,0,0,0"/>
            <ToggleSwitch x:Name="toggleStartMinimizedToTray"
                  Grid.Row="1" Grid.Column="1"
                  IsOn="{x:Bind ViewModel.StartMinimizedToTray, Mode=TwoWay}"
                  HorizontalAlignment="Center"
                  MinWidth="0" 
                  Margin="10,0,0,0"/>
        </Grid>

        <!-- Divider Line and Informational TextBlock -->
        <Line Grid.Row="10" 
              X2="1000" 
              Stroke="Black" 
              StrokeThickness="1" 
              HorizontalAlignment="Center"
              Margin="0,10,0,0"
            />
        <TextBlock Grid.Row="11"
           TextWrapping="Wrap"
           Margin="0,10,0,0"
           HorizontalAlignment="Center">
            <Run Text="IMPORTANT" FontWeight="Bold" Foreground="Red"/><Run Text=": Follow these steps to set up Dynamic Lighting:"/>
            <LineBreak/>
            <Run Text="      1. Click here to open "/>
            <Hyperlink NavigateUri="ms-settings:personalization-lighting" Click="OpenLightingSettings_Click">Settings > Personalization > Dynamic Lighting</Hyperlink>
            <LineBreak/>
            <Run Text="      2. Find and click on your keyboard device in the row of devices at the top, to open its specific settings"/>
            <LineBreak/>
            <Run Text="      3. Under 'Background Light Control', drag 'Dynamic Lighting Key Indicator' to the top of the list"/>
            <LineBreak/>
            <LineBreak/>
            <Run Text="⚠️ Note: Be sure to change the 'Background Lighting Control' setting only within the sub-menu for your device."/><LineBreak/>
            <Run Text="The setting in the top level 'Dynamic Lighting' menu is the global setting that will affect all devices."/>
        </TextBlock>

    </Grid>
</Window>